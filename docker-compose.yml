version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: interview-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: interview_system
      MYSQL_USER: interview
      MYSQL_PASSWORD: interview123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-database-fixed.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - interview-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "interview", "-pinterview123"]
      timeout: 20s
      retries: 10
      interval: 10s

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: interview-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/interview_system?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&autoReconnect=true&failOverReadOnly=false
      - SPRING_DATASOURCE_USERNAME=interview
      - SPRING_DATASOURCE_PASSWORD=interview123
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=false
      - SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT=30000
      - SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE=10
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - interview-network

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: interview-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - interview-network

volumes:
  mysql_data:

networks:
  interview-network:
    driver: bridge 